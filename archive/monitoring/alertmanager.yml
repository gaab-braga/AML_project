global:
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'alerts@aml-pipeline.com'
  smtp_auth_username: 'alerts@aml-pipeline.com'
  smtp_auth_password: 'your-smtp-password'

templates:
  - '/etc/alertmanager/templates/*.tmpl'

route:
  group_by: ['alertname', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'email-notifications'

  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'critical-notifications'
      continue: true

    # Database alerts - special handling
    - match:
        service: database
      receiver: 'database-team'
      continue: true

    # System alerts - devops team
    - match:
        service: system
      receiver: 'devops-team'
      continue: true

receivers:
  - name: 'email-notifications'
    email_configs:
      - to: 'team@aml-pipeline.com'
        send_resolved: true

  - name: 'critical-notifications'
    email_configs:
      - to: 'oncall@aml-pipeline.com'
        send_resolved: true
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#alerts-critical'
        send_resolved: true
        title: 'üö® {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          *Service:* {{ .Labels.service }}
          *Time:* {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}

  - name: 'database-team'
    email_configs:
      - to: 'database@aml-pipeline.com'
        send_resolved: true

  - name: 'devops-team'
    email_configs:
      - to: 'devops@aml-pipeline.com'
        send_resolved: true
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#devops'
        send_resolved: true

  - name: 'slack-notifications'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#alerts'
        send_resolved: true
        title: '‚ö†Ô∏è {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          *Service:* {{ .Labels.service }}
          {{ end }}

inhibit_rules:
  # Inhibit warning alerts if critical alert is already firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'service']

  # Inhibit info alerts if warning is already firing
  - source_match:
      severity: 'warning'
    target_match:
      severity: 'info'
    equal: ['alertname', 'service']